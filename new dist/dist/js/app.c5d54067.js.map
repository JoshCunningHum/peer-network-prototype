{"version":3,"file":"js/app.c5d54067.js","mappings":"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","sources":["webpack://peer-network-prototype/./src/App.vue","webpack://peer-network-prototype/./src/peer-network/PeerSignal.js","webpack://peer-network-prototype/./src/peer-network/PeerUtil.js","webpack://peer-network-prototype/./src/peer-network/Peer.js","webpack://peer-network-prototype/./src/peer-network/PeerArray.js","webpack://peer-network-prototype/./src/peer-network/PeerNetwork.js","webpack://peer-network-prototype/./src/components/PeerList.vue","webpack://peer-network-prototype/./src/components/PeerPing.vue","webpack://peer-network-prototype/./src/components/PeerPing.vue?05c8","webpack://peer-network-prototype/./src/components/PeerList.vue?40ad","webpack://peer-network-prototype/./src/util/Event.js","webpack://peer-network-prototype/./src/components/PeerView.vue","webpack://peer-network-prototype/./src/components/CopyReadonly.vue","webpack://peer-network-prototype/./src/components/CopyReadonly.vue?452f","webpack://peer-network-prototype/./src/components/PeerView.vue?564e","webpack://peer-network-prototype/./src/components/PeerSignaller.vue","webpack://peer-network-prototype/./src/components/PeerSignaller.vue?f697","webpack://peer-network-prototype/./src/components/ChatComponent.vue","webpack://peer-network-prototype/./src/components/ChatComponent.vue?4775","webpack://peer-network-prototype/./src/components/ModalManager.vue","webpack://peer-network-prototype/./src/components/ModalManager.vue?3c18","webpack://peer-network-prototype/./src/App.vue?7ccd","webpack://peer-network-prototype/./src/main.js","webpack://peer-network-prototype/webpack/bootstrap","webpack://peer-network-prototype/webpack/runtime/chunk loaded","webpack://peer-network-prototype/webpack/runtime/compat get default export","webpack://peer-network-prototype/webpack/runtime/define property getters","webpack://peer-network-prototype/webpack/runtime/global","webpack://peer-network-prototype/webpack/runtime/hasOwnProperty shorthand","webpack://peer-network-prototype/webpack/runtime/make namespace object","webpack://peer-network-prototype/webpack/runtime/jsonp chunk loading","webpack://peer-network-prototype/webpack/startup"],"sourcesContent":["<template>\r\n  <div id=\"app\" class=\"container-fluid d-flex flex-column\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col p-2 d-flex align-items-center justify-content-between gap-2\">\r\n\r\n        <div class=\"btn-group\">\r\n          <input type=\"radio\" name=\"mode\" class=\"btn-check\" id=\"mode-host-btn\" :value=\"true\" v-model=\"host\">\r\n          <label for=\"mode-host-btn\" class=\"px-4 btn btn-outline-dark\">Host</label>\r\n\r\n          <input type=\"radio\" name=\"mode\" class=\"btn-check\" id=\"mode-join-btn\" :value=\"false\" v-model=\"host\" checked>\r\n          <label for=\"mode-join-btn\" class=\"px-4 btn btn-outline-dark\">Join</label>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary\">Chat</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"flex-grow-1 row border-top border-secondary\">\r\n      <div class=\"d-flex flex-column col-3 border-end py-2\">\r\n        <!-- Pending Connections -->\r\n        <div class=\"flex-fill d-flex flex-column gap-1\">\r\n          <PeerList @showPeer=\"showPeerOptions\" :list=\"pending\" :highlight=\"activePeer\" />\r\n        </div>\r\n\r\n        <!-- Peer Initializer -->\r\n        <button v-if=\"host\" class=\"btn btn-secondary w-100\" @click=\"createOffer\">Create Offer</button>\r\n\r\n      </div>\r\n      <div class=\"d-flex flex-column col border-end p-0\">\r\n        <!-- Peer Options and Operations -->\r\n\r\n        <div class=\"d-flex flex-column flex-fill\">\r\n          <PeerView v-if=\"activePeer !== null\" :peer=\"activePeer\" ref=\"peerview\"/>\r\n          <div v-else\r\n            class=\"h5 text-secondary text-uppercase d-flex justify-content-center align-items-center w-100 h-100 flex-fill\">\r\n            No Peer Selected\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n          <div class=\"border-top p-3\">\r\n\r\n            <div v-if=\"host\">\r\n              <small>Immediate Offer Signal</small>\r\n              <CopyReadonly :text=\"network.availableInitiator?.signalData\" />\r\n            </div>\r\n            <div>\r\n              <PeerSignaller :initiator=\"host\" @showPeer=\"showPeerOptions\" />\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n      </div>\r\n      <div class=\"d-flex flex-column col-3 py-2 gap-1\">\r\n        <!-- Active Connections -->\r\n        <PeerList  @showPeer=\"showPeerOptions\" :list=\"active\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modals -->\r\n    <ModalManager \r\n    :open=\"modalOpen\" \r\n    :modal=\"modal\" \r\n    \r\n    \r\n    />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// eslint-disable-next-line no-unused-vars\r\nimport { computed } from 'vue';\r\n\r\n// Peer Network Classes\r\nimport PeerNetwork from './peer-network/PeerNetwork';\r\nimport PeerList from './components/PeerList.vue';\r\nimport Peer from './peer-network/Peer';\r\n\r\n// Utility Classes\r\nimport EventBus from './util/Event';\r\n\r\n// Components\r\nimport PeerView from './components/PeerView.vue';\r\nimport CopyReadonly from './components/CopyReadonly.vue';\r\nimport PeerSignaller from './components/PeerSignaller.vue';\r\nimport ChatComponent from './components/ChatComponent.vue';\r\nimport ModalManager from './components/ModalManager.vue';\r\n\r\nconst bus = new EventBus();\r\n\r\nconst network = new PeerNetwork();\r\nwindow.network = network;\r\nwindow.Peer = Peer;\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    PeerList,\r\n    PeerView,\r\n    CopyReadonly,\r\n    PeerSignaller,\r\n    ModalManager\r\n  },\r\n  data() {\r\n    return {\r\n      network,\r\n      activePeer: null,\r\n      modalOpen: false,\r\n      modal: ChatComponent\r\n    }\r\n  },\r\n  created(){\r\n    // Setup Listeners here\r\n\r\n\r\n    network.on(\"connect\", () => {\r\n      this.activePeer = null;\r\n      this.$forceUpdate();\r\n    })\r\n\r\n    // \r\n  },\r\n  computed: {\r\n    host: {\r\n      get() {\r\n        return this.network.host;\r\n      },\r\n      set(value, old) {\r\n        this.network.restart(value);\r\n        if(value !== old) this.activePeer = null;\r\n      }\r\n    },\r\n    pending() {\r\n      return [...this.network.initialized, ...this.network.processing]\r\n    },\r\n    active() {\r\n      return this.network.active;\r\n    }\r\n  },\r\n  methods: {\r\n    createOffer() {\r\n      this.network.offer();\r\n    },\r\n    showPeerOptions(peer) {\r\n      this.activePeer = peer;\r\n    }\r\n  },\r\n  watch: {\r\n    activePeer: {\r\n      handler(peer) {\r\n        if (peer === null || peer === undefined) return;\r\n        if (peer.state === Peer.State.CANCELLED || peer.state === Peer.State.DISCONNECTED) {\r\n          this.activePeer = null;\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      network: this.network,\r\n      bus: computed(() => bus)\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#app {\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n</style>\r\n\r\n<style>\r\n.loading::after {\r\n  display: inline-block;\r\n  animation: dotty steps(1, end) 1s infinite;\r\n  content: '';\r\n}\r\n\r\n@keyframes dotty {\r\n  0% { content: ''; }\r\n  25% { content: '.'; }\r\n  50% { content: '..'; }\r\n  75% { content: '...'; }\r\n  100% { content: ''; }\r\n}</style>","import { parse, stringify } from \"zipson/lib\";\r\n\r\nexport default class PeerSignal {\r\n    /**\r\n     * @type {String}\r\n     */\r\n    type;\r\n    /**\r\n     * @type {String}\r\n     */\r\n    sdp;\r\n    /**\r\n     * @type {String} uuid of the initiator peer\r\n     */\r\n    sender;\r\n    /**\r\n     * @type {String} uuid of the joiner peer\r\n     */\r\n    joiner;\r\n\r\n    /**\r\n     * \r\n     * @param {SimplePeer.SignalData} simpleSignal \r\n     * @param {String} sender uuid of the initiator peer\r\n     * @param {String} joiner uuid of the joiner peer\r\n     */\r\n    constructor(simpleSignal, sender, joiner = null){\r\n        this.type = simpleSignal.type;\r\n        this.sdp = simpleSignal.sdp;\r\n        this.sender = sender;\r\n        this.joiner = joiner;\r\n    }\r\n\r\n    toString(){\r\n        return stringify(this);\r\n    }\r\n\r\n    /**\r\n     * Validates a string or an object if it is a valid PeerSignal\r\n     * @param {(String | Object)} signal \r\n     * @returns {Object}\r\n     */\r\n    static validate(signal){\r\n        try {\r\n            if(typeof signal === \"string\") signal = parse(signal);\r\n        }catch(err){\r\n            return false;\r\n        }\r\n\r\n        return {\r\n            value: [\"type\", \"sdp\", \"sender\"].every(v => {\r\n                return Object.hasOwn(signal, v);\r\n            }),\r\n            type: signal?.type,\r\n            parsed: signal\r\n        }\r\n    }\r\n}","\r\n/**\r\n * \r\n * @param {Number} [len = 8] the length of the id\r\n * @returns {String} \r\n */\r\nfunction peeruuid(len = 8){\r\n    // generates a unique id for a peer\r\n    return Math.random().toString(36).slice(2, 2 + len);\r\n}\r\n\r\n/**\r\n * simple-peer sends data as an array of numbers, this is copied from stackoverflow to convert that array to string\r\n * @param {Array} array Array of unsigned 8-bit integer to string\r\n * @returns {String}\r\n */\r\nfunction Utf8ArrayToStr(array) {\r\n    var out, i, len, c;\r\n    var char2, char3;\r\n\r\n    out = \"\";\r\n    len = array.length;\r\n    i = 0;\r\n    while(i < len) {\r\n    c = array[i++];\r\n    switch(c >> 4)\r\n    { \r\n      case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\r\n        // 0xxxxxxx\r\n        out += String.fromCharCode(c);\r\n        break;\r\n      case 12: case 13:\r\n        // 110x xxxx   10xx xxxx\r\n        char2 = array[i++];\r\n        out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\r\n        break;\r\n      case 14:\r\n        // 1110 xxxx  10xx xxxx  10xx xxxx\r\n        char2 = array[i++];\r\n        char3 = array[i++];\r\n        out += String.fromCharCode(((c & 0x0F) << 12) |\r\n                       ((char2 & 0x3F) << 6) |\r\n                       ((char3 & 0x3F) << 0));\r\n        break;\r\n    }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nfunction invokeIfAvailable(cb, ...args) {\r\n    if (typeof cb === \"function\") cb(...args);\r\n}\r\n\r\nexport {\r\n    peeruuid,\r\n    Utf8ArrayToStr,\r\n    invokeIfAvailable\r\n}","/* eslint-disable no-unused-vars */\r\nimport PeerNetwork from \"./PeerNetwork\";\r\nimport SimplePeer from \"simple-peer\";\r\nimport { peeruuid, Utf8ArrayToStr } from \"./PeerUtil\";\r\nimport PeerSignal from \"./PeerSignal\";\r\nimport { parse, stringify } from \"zipson/lib\";\r\n\r\nclass Peer{\r\n\r\n    /**\r\n     * Different lifecycle stages of a peer\r\n     */\r\n    static State = {\r\n        /**\r\n         * Beggining state of the peer. Used to handle cases where WebRTC is not supported\r\n         */\r\n        INIT_PEER: Symbol(),\r\n\r\n        /**\r\n         * Initiator Peer: After creating an offer signal\r\n         */\r\n        WAIT_ANSWER: Symbol(),\r\n        /**\r\n         * Joiner Peer: After instantiating the peer\r\n         */\r\n        WAIT_OFFER: Symbol(),\r\n        /**\r\n         * Initiator Peer: After confirming but not yet connected.\r\n         * \r\n         * Joiner Peer: After creating an answer signal on answer call and waiting to be connected.\r\n         */\r\n        WAIT_CONNECT: Symbol(),\r\n        /**\r\n         * Initiator Peer: When created by a reoffer event. Will wait for an answer. This is used to identify which peers are a result of reoffers.\r\n         */\r\n        WAIT_REANSWER: Symbol(),\r\n        \r\n        /**\r\n         * Connected State\r\n         */\r\n        CONNECTED: Symbol(),\r\n        /**\r\n         * After initializing a peer but got destroyed before getting to a connected state. Used for debugging purposes only.\r\n         */\r\n        CANCELLED: Symbol(),\r\n        /**\r\n         * After connecting and got disconnected. Used for debugging purposes only.\r\n         */\r\n        DISCONNECTED: Symbol()\r\n    }\r\n\r\n    uuid = peeruuid();\r\n    /**\r\n     * @type {PeerNetwork}\r\n     */\r\n    network;\r\n    /**\r\n     * @type {SimplePeer.Instance}\r\n     */\r\n    peer;\r\n    /**\r\n     * @type {Symbol}\r\n     * @private\r\n     */\r\n    _state;\r\n    /**\r\n     * @type {PeerSignal}\r\n     */\r\n    signalData;\r\n    /**\r\n     * Peer uuid at the other end of the peer connection. Used for creating PeerSignal.\r\n     * @type {String}\r\n     */\r\n    partner;\r\n    /**\r\n     * @type {Number} the setinterval id for pinging (for closing)\r\n     */\r\n    pingInterval;\r\n    /**\r\n     * @type {Number} the exact time when the recording of ping started. Set to 0 when ping end signal arrives.\r\n     */\r\n    pingStart = null;\r\n    /**\r\n     * @type {Number} amount of latency (ping) measured in ms\r\n     */\r\n    pingms;\r\n\r\n    get state(){\r\n        return this._state;\r\n    }\r\n\r\n    get stateName(){\r\n        return Object.entries(Peer.State).find(([n, s]) => s === this._state)[0];\r\n    }\r\n\r\n    get connected(){\r\n        return this.state === Peer.State.CONNECTED;\r\n    }\r\n\r\n    /**\r\n     * @param {(Symbol | String)} state\r\n     */\r\n    set state(state){\r\n        if(typeof state === \"string\"){\r\n            // Check if value matches with any pre written states above\r\n            const appropriate = Object.entries(Peer.State).some(([n, s]) => {\r\n                if(n === state.toUpperCase()){\r\n                    this._state = s;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            if(!appropriate) return;\r\n        }else this._state = state;\r\n\r\n        // TODO: Initiate events based on what state on this peer\r\n        this.network.handle(this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {PeerNetwork} network \r\n     * @param {String} [reofferFrom=null] identifies if this peer is a reoffer event creation \r\n     */\r\n    constructor(network, reofferFrom = null){\r\n        this.network = network;\r\n        this.state = Peer.State.INIT_PEER;\r\n        this.partner = reofferFrom;\r\n        this.init(reofferFrom);\r\n    }\r\n\r\n    get isHost(){\r\n        return this.network?.host;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} reofferFrom \r\n     */\r\n    init(reofferFrom = null){\r\n        const p = this.peer = new SimplePeer({\r\n            initiator: this.isHost,\r\n            trickle: false,\r\n            channelName: this.uuid,\r\n            config: {\r\n                iceServers: [\r\n                    { urls: 'stun:stun2.l.google.com:19302' }, \r\n                    { urls: 'stun:stun3.l.google.com:19302' }\r\n                ]\r\n            }\r\n        });\r\n\r\n        // To lock the current state of the network\r\n        const host = this.isHost;\r\n\r\n        if(!host) this.state = Peer.State.WAIT_OFFER;\r\n\r\n\r\n        p.on(\"signal\", data => {\r\n            if(this.signalData != null){\r\n                // If signal is already created, do something here\r\n\r\n                // This part is a guaranteed initiator peer only because only an initiator peer can signal when a signal data is already created when doing confirming\r\n                // A joiner peer is only emitting signal when creating an answer signal, thus it won't emit signal when there is already an answer signal\r\n\r\n                this.state = Peer.State.WAIT_CONNECT;\r\n            }else{\r\n                // signal is not yet created so...\r\n\r\n                // Build the parameter for the peer signal\r\n                const signalParam = [this.uuid];\r\n                if(!host) signalParam.unshift(this.partner);\r\n                else if(reofferFrom !== null) signalParam.push(this.partner);\r\n\r\n                this.signalData = new PeerSignal(data, ...signalParam);\r\n\r\n                // its confusing I know. Basically sets the state of the current peer\r\n                // If this is a joiner then its waiting for the connected state\r\n                // If this is a initiator:\r\n                //  If this is not a reoffer initiator, then set it waiting for an answer\r\n                //  If this is created as a reoffer, then set it waiting for a reanswer\r\n                this.state = this.isHost ? \r\n                    reofferFrom === null ? Peer.State.WAIT_ANSWER : Peer.State.WAIT_REANSWER \r\n                : Peer.State.WAIT_CONNECT;\r\n            }\r\n        })\r\n\r\n        p.on(\"connect\", () => {\r\n            this.state = Peer.State.CONNECTED;\r\n            this.setup();\r\n        })\r\n\r\n        p.on(\"data\", data => {\r\n            // Exlusive for ping\r\n            if(ArrayBuffer.isView(data)) data = Utf8ArrayToStr(data);\r\n\r\n            // ping signal\r\n            if(data === '§'){\r\n                this.peer.send('¨'); // send an ping end signal\r\n            }else if(data === '¨'){\r\n                this.pingArrive();\r\n            }else{\r\n\r\n                // Do normal stuff here\r\n\r\n            }\r\n        })\r\n\r\n        p.on(\"close\", () => {\r\n            this.state = this.state === Peer.State.CONNECTED ? Peer.State.DISCONNECTED : Peer.State.CANCELLED;\r\n            this.network = null;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Invoke right after the peer is connected. Will perform essential preparations like ping handling, network participant view etc\r\n     * @private\r\n     */\r\n    setup(){\r\n        // Ping Handling\r\n        if(this.network?.pinging){\r\n            this.ping();\r\n            this.pingInterval = setInterval(() => this.ping(), this.network.ping_interval);\r\n        }\r\n        \r\n\r\n        // TODO: Participant Acquisition\r\n    }\r\n\r\n    /**\r\n     * Pings the other side to measure the latency\r\n     */\r\n    ping(){\r\n        // Uses JS 'magic' casting to let 0, undefined, and null to start a ping and any number not 0 cant\r\n        if(this.pingStart) return; // Do not send another ping signal if the last ping signal didn't arrive\r\n        this.pingStart = Date.now();\r\n        try {\r\n            this.peer.send('§');\r\n        }catch(err){\r\n            // Nothing\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoked when a ping end signal is received through the data channel\r\n     */\r\n    pingArrive(){\r\n        this.pingms = Date.now() - this.pingStart;\r\n        this.pingStart = 0;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {PeerSignal | String} data PeerSignal Data that is sent through a signaling mechanism. Can be the raw compressed string or the processed Peer Signal Data\r\n     */\r\n    signal(data){\r\n        try {\r\n            if(typeof data === \"string\") data = parse(data);\r\n            this.partner = this.isHost ? data.joiner : data.sender;\r\n            \r\n            this.peer.signal(data);\r\n            \r\n            \r\n            if(this.isHost){\r\n                // A signalling initiator is in its confirming process\r\n            }else{\r\n                // A signalling joiner is in its answering process\r\n            }\r\n\r\n        }catch(err){\r\n            console.error(`Error when signaling peer [${this.uuid}]: `, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends data to the peer\r\n     * @param {Object} data Will always be an object\r\n     */\r\n    send(data){\r\n        const d = stringify(data);\r\n        try{\r\n            this.peer.send(d);\r\n        }catch(err){\r\n            console.log(`Error when sending: `, data, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends data to the peer but buffers it until its ready to be sent\r\n     * @param {Object} data Will always be an object\r\n     */\r\n    write(data){\r\n        const d = stringify(data);\r\n        try{\r\n            this.peer.write(d);\r\n        }catch(err){\r\n            console.log(`Error when sending: `, data, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Peer} peer \r\n     * @returns {Boolean}\r\n     */\r\n    equals(peer){\r\n        if(!(peer instanceof Peer)) return false;\r\n        return peer.uuid === this.uuid;\r\n    }\r\n\r\n    destroy(){\r\n        try {\r\n            clearInterval(this.pingInterval);\r\n            this.peer.destroy();\r\n        }catch(err){\r\n            console.error(`Error when destroying Peer ${this.uuid}`, err);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Peer;","import Peer from \"./Peer\";\r\n\r\n/**\r\n * @typedef PeerArray\r\n * @extends {Array<Peer>}\r\n */\r\nexport default class PeerArray extends Array{\r\n    \r\n\r\n    /**\r\n     * \r\n     * @param {(String | Number)} peer gets the peer object using the id or the index\r\n     * @returns \r\n     */\r\n    get(peer){\r\n        if(peer instanceof Peer) return peer;\r\n        const index = (typeof peer === \"number\") ? peer : this.findIndex(p => p.uuid === peer);\r\n        if(index == -1) return null;\r\n        return this[index];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {(String | Peer)} peer \r\n     * @returns {Boolean}\r\n     */\r\n    has(peer){\r\n        return this.index(peer) !== -1;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {(String | Peer)} peer can accept id or the peer object\r\n     * @returns \r\n     */\r\n    index(peer){\r\n        return this.findIndex(p => {\r\n            return peer instanceof Peer ? p.equals(peer) :\r\n                typeof peer === \"string\" ? p.uuid === peer : false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * return the length of the peer array\r\n     * @returns {Number}\r\n     */\r\n    size(){\r\n        return this.length;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean wether the add operation is succesful or not\r\n     * @param {Peer} peer \r\n     * @returns {Boolean}\r\n     */\r\n    add(peer){\r\n        if(this.has(peer) || !(peer instanceof Peer)) return false;\r\n        this.push(peer);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Peer} peer \r\n     * @returns {(Peer | null)} This should be transfered to another peer array or destroyed\r\n     */\r\n    remove(peer){\r\n        const index = this.index(peer);\r\n        if(index == -1) return null;\r\n        return this.splice(index, 1)[0];\r\n    }\r\n\r\n    isEmpty(){\r\n        return this.length === 0;\r\n    }\r\n\r\n    clean(){\r\n        this.forEach(p => p.destroy());\r\n        this.length = 0;\r\n    }\r\n}","// eslint-disable-next-line no-unused-vars\r\nimport PeerSignal from \"./PeerSignal\";\r\nimport Peer from \"./Peer\";\r\nimport PeerArray from \"./PeerArray\";\r\nimport { parse } from \"zipson/lib\";\r\nimport { invokeIfAvailable } from \"./PeerUtil\";\r\n\r\n//#region Event Definitions\r\n\r\n/**\r\n * @callback DataEventCallback\r\n * @param {Array} data  The data that was sent. Already decrypted.\r\n * @param {Peer} sender The peer instance that relates to the callback.\r\n * @param {PeerNetwork} network Network instance.\r\n */\r\n\r\n/**\r\n * @callback SignalProcessCallback\r\n * @param {PeerSignal} signal The signal detail\r\n * @param {Peer} peer The peer instance that relates to the callback\r\n * @param {PeerNetwork} network Network instance\r\n */\r\n\r\n/**\r\n * @callback SignalConclusionCallback\r\n * @param {Peer} peer the peer instance that relates to the callback\r\n * @param {PeerNetwork} network Network instance\r\n */\r\n\r\n//#endregion\r\n\r\nclass PeerNetworkConfig {\r\n    host = false;\r\n    transfer_enabled = true;\r\n    is_transferring = false;\r\n    transfer_timeout = 2000;\r\n    /**\r\n     * Saves all instance of peers even if it is destroyed.\r\n     */\r\n    save_history = false;\r\n    pinging = true;\r\n    ping_interval = 1000; // ms\r\n\r\n    /**\r\n     * Default RTCPeerConnection configuration when instantiating peers\r\n     * @type {RTCConfiguration}\r\n     */\r\n    RTC_Config = {\r\n        iceServers: [\r\n            { urls: 'stun:stun2.l.google.com:19302' }, \r\n            { urls: 'stun:stun3.l.google.com:19302' }, \r\n            { urls: 'stun:stun4.l.google.com:19302' }, \r\n            { urls: 'stun:global.stun.twilio.com:3478?transport=udp' }\r\n        ]\r\n    }\r\n\r\n    // More Options in the future\r\n    // reconnect = false; // Requires a signal handler\r\n}\r\n\r\n// haha lol, too lazy to do redundant assignments\r\nexport default class PeerNetwork extends PeerNetworkConfig {\r\n    //#region Peer Containers\r\n\r\n    /**\r\n     * All active connections.\r\n     * Only 1 for non-host (Joining Peer).\r\n     */\r\n    active = new PeerArray();\r\n    /**\r\n     * All initialized peers.\r\n     * Host: All offering initiators (not confirming).\r\n     * Joiner: Joining peer waiting for offer.\r\n     */\r\n    initialized = new PeerArray();\r\n    /**\r\n     * All processing peers.\r\n     * Host: All initiators after confirming.\r\n     * Joiner: Joining peer after answering an offer.\r\n     */\r\n    processing = new PeerArray();\r\n    /**\r\n     * All created instance of peers. Only works when save_history is enabled;\r\n     */\r\n    history = new PeerArray();\r\n\r\n    //#endregion\r\n\r\n    //#region Events\r\n\r\n    /**\r\n     * When an initiator peer created an offer.\r\n     * @type {SignalProcessCallback}\r\n     */\r\n    _onOffer;\r\n    /**\r\n     * When a joiner peer created an answer to an offer\r\n     * @type {SignalProcessCallback}\r\n     */\r\n    _onAnswer;\r\n    /**\r\n     * When an initiator peer received an answer to its own offer, but not connected yet.\r\n     * @type {SignalProcessCallback}\r\n     */\r\n    _onConfirm;\r\n    /**\r\n     * When a peer is finally connected. Fired on both sides.\r\n     * @type {SignalConclusionCallback}\r\n     */\r\n    _onConnect;\r\n\r\n    /**\r\n     * When an answer signal is received but the receiving initiator is not in its receiving state or the initiator is not yet existing. This will create a new initiator and sends back a brand new offer to the said joiner.\r\n     *\r\n     * This requires a specific logic when implimenting a signalling mechanism to identify which \"client\" contains the specific joiner.\r\n     * @type {SignalProcessCallback}\r\n     */\r\n    _onReoffer;\r\n    /**\r\n     * When an initiated peer that is not yet connected is destroyed, it will call this event\r\n     * @type {SignalConclusionCallback}\r\n     */\r\n    _onCancel;\r\n    /**\r\n     * When a peer that is connected got disconnected.\r\n     * @type {SignalConclusionCallback}\r\n     */\r\n    _onDisconnect;\r\n\r\n    /**\r\n     * @type {Map<String, DataEventCallback>}\r\n     */\r\n    _events;\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     *\r\n     * @param {PeerNetworkConfig} opts Peer Network Configuration\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n\r\n        // apply options\r\n        Object.assign(this, opts);\r\n\r\n        // start network\r\n        this.restart(this.host);\r\n    }\r\n\r\n    /**\r\n     * Re-start the network and removes all peer connections. Allows changing roles.\r\n     * @param {Boolean} host\r\n     */\r\n    restart(host = false) {\r\n        this.host = host;\r\n\r\n        // Remove all dangling webrtc connection\r\n        this.active.clean();\r\n        this.initialized.clean();\r\n        this.processing.clean();\r\n\r\n        // If host then create an initiator peer\r\n        if (this.host) this.offer();\r\n    }\r\n\r\n    /**\r\n     * Creates an initiator peer and returns it.\r\n     * @param {String} [reofferFrom = null]\r\n     * @returns {Peer}\r\n     */\r\n    offer(reofferFrom = null) {\r\n        if (!this.host) return null;\r\n        // Creates a initiator peer, when an offer signal is created, it will be added in the initialized array\r\n        return new Peer(this, reofferFrom);\r\n    }\r\n\r\n    /**\r\n     * Creates a joiner peer and answers an offer signal. If a joiner peer is already created and a its already processing, then perform a re-answer event where the existing joiner peer is destroyed and re-invoke the offer signal\r\n     * @param {(String | PeerSignal)} offerSignal\r\n     * @returns {Peer}\r\n     */\r\n    answer(offerSignal) {\r\n        // Do not continue when not a host or already connected (You have to use restart)\r\n        if (this.host || !this.active.isEmpty()) return null;\r\n        if (typeof offerSignal === \"string\") offerSignal = parse(offerSignal);\r\n\r\n        if (this.processing.isEmpty()) {\r\n            // Create a joiner peer and signal the offer\r\n            const peer = new Peer(this);\r\n            peer.signal(offerSignal);\r\n            return peer;\r\n        } else {\r\n            // If the joiner peer is already processing, then this is a result of a reoffer.\r\n            // Remove the peer waiting for connection in processing and re invoke this method\r\n            this.processing.clean();\r\n            return this.answer(offerSignal);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {(PeerSignal | String)} answerSignal\r\n     * @returns {Peer} returns the specified initiator or the recent instanciated initiator peer created from a reoffer event\r\n     */\r\n    confirm(answerSignal) {\r\n        if (typeof answerSignal === \"string\")\r\n            answerSignal = parse(answerSignal);\r\n        const { sender } = answerSignal;\r\n\r\n        // Find the initiator specified in the initalized array\r\n        const initiator = this.initialized.get(sender);\r\n        console.log(`Confirming offer from sender ${sender}`);\r\n        /* \r\n            If initiator is not found because\r\n                - already connected (in the active)\r\n                - already confirming (in the processing)\r\n                - not found because not generated\r\n            Emit a re-offer event\r\n        */\r\n        if (initiator === null) {\r\n            return this.offer(true);\r\n        }\r\n\r\n        initiator.signal(answerSignal);\r\n        return initiator;\r\n    }\r\n\r\n    /**\r\n     * Chooses what to invoke base on the current role.\r\n     * @param {(PeerSignal | String)} signal\r\n     */\r\n    signal(signal) {\r\n        return this.host ? this.confirm(signal) : this.answer(signal);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String} event\r\n     * @param {(SignalProcessCallback | DataEventCallback)} cb\r\n     */\r\n    on(event, cb) {\r\n        switch (event) {\r\n            case \"offer\":\r\n            case \"answer\":\r\n            case \"confirm\":\r\n            case \"connect\":\r\n            case \"reoffer\":\r\n            case \"cancel\":\r\n            case \"disconnect\":\r\n                // Tinapulan, ye I know, stfu\r\n                // All description and details of each events are documented above\r\n                this[`_on${event.charAt(0).toUpperCase() + event.slice(1)}`] =\r\n                    cb;\r\n                break;\r\n            default:\r\n                this._events.set(`_${event}`, cb);\r\n                this._event_names.push(event);\r\n        }\r\n    }\r\n\r\n    get hasAvailableInitiators() {\r\n        if (!this.host) return false;\r\n        return this.initialized.some((p) => p.state === Peer.State.WAIT_ANSWER); // since reoffers have WAIT_REANSWER\r\n    }\r\n\r\n    get availableInitiator() {\r\n        return this.initialized.find((p) => p.state === Peer.State.WAIT_ANSWER);\r\n    }\r\n\r\n    /**\r\n     * Handles peer state changes\r\n     * @param {Peer} peer\r\n     * @param  {...any} data\r\n     * @private\r\n     */\r\n    handle(peer) {\r\n        const state = peer.state;\r\n\r\n        // TODO: Make sure peer is aligned with the current role of the network. Remove it if not.\r\n\r\n        const {\r\n            INIT_PEER,\r\n            WAIT_ANSWER,\r\n            WAIT_CONNECT,\r\n            WAIT_REANSWER,\r\n            CONNECTED,\r\n            CANCELLED,\r\n            DISCONNECTED,\r\n        } = Peer.State;\r\n\r\n        const callbackInfo = {\r\n            handler: null,\r\n            args: [peer.signalData, peer],\r\n        };\r\n\r\n        switch (state) {\r\n            case INIT_PEER:\r\n                // TODO: Do some reactive updates for vue and other things\r\n                if (this.save_history) this.history.add(peer);\r\n                if (!this.host) this.initialized.add(peer);\r\n                return;\r\n            case WAIT_ANSWER:\r\n                // Do not execute when current network is not host\r\n                if (!this.host) return;\r\n                this.initialized.add(peer);\r\n                callbackInfo.handler = this._onOffer;\r\n                break;\r\n            case WAIT_CONNECT:\r\n                this.initialized.remove(peer);\r\n                this.processing.add(peer);\r\n\r\n                // Create another initiator peer when the initialized array is empty of non-reofffer initialized peer\r\n                if (!this.hasAvailableInitiators) this.offer();\r\n\r\n                callbackInfo.handler = this.host\r\n                    ? this._onConfirm\r\n                    : this._onAnswer;\r\n                break;\r\n            case CONNECTED:\r\n                this.initialized.remove(peer); // Looks unnecessary but for some reason some times peer remains on initialized\r\n                this.processing.remove(peer);\r\n                this.active.add(peer);\r\n\r\n                // Create another initiator peer when the initialized array is empty of non-reofffer initialized peer\r\n                if (!this.hasAvailableInitiators) this.offer();\r\n\r\n                callbackInfo.handler = this._onConnect;\r\n                callbackInfo.args = [peer];\r\n                break;\r\n            case WAIT_REANSWER:\r\n                if (!this.host) return;\r\n                this.initialized.add(peer);\r\n                callbackInfo.handler = this._onReoffer;\r\n                break;\r\n            case CANCELLED:\r\n                this.initialized.remove(peer);\r\n                this.processing.remove(peer);\r\n\r\n                // Create another initiator peer when the initialized array is empty of non-reofffer initialized peer\r\n                if (!this.hasAvailableInitiators) this.offer();\r\n\r\n                callbackInfo.handler = this._onCancel;\r\n                break;\r\n            case DISCONNECTED:\r\n                this.active.remove(peer);\r\n                callbackInfo.handler = this._onDisconnect;\r\n                break;\r\n            default:\r\n                // Does not do anything\r\n                return;\r\n        }\r\n\r\n        invokeIfAvailable(\r\n            callbackInfo.handler,\r\n            ...callbackInfo.args,\r\n            this\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Invoked by peers when a data event happens\r\n     * @param {String} data the raw data sent through WebRTC\r\n     */\r\n    data(data) {\r\n        /**\r\n         * @type {Object[]}\r\n         */\r\n        const processed = parse(data),\r\n            ev = processed.shift();\r\n\r\n        invokeIfAvailable(this._events.get(ev), ...processed);\r\n    }\r\n\r\n    // /**\r\n    //  * Disconnect from the network if joiner, or removes a single peer if initiator\r\n    //  * @param {(Peer | String)} peer  \r\n    //  */\r\n    // disconnect(peer){\r\n    //     // TODO: Perform transfer here\r\n    //     this.active.clean();\r\n    //     this.processing.clean();\r\n    //     this.initialized.clean();\r\n    // }\r\n}\r\n","<template>\r\n    <div v-for=\"peer in list\" :key=\"peer.uuid\" :class=\"`peer btn btn-${getStateTheme(peer)} w-100 ${peer.equals(highlight) ? 'active' : ''}`\">\r\n        <div class=\"d-flex justify-content-between align-items-center\" @click=\"showPeer(peer)\">\r\n            \r\n            <span v-if=\"peer.connected\">\r\n                <PeerPing :peer=\"peer\" />\r\n            </span>\r\n            <span v-else class=\"loading\">\r\n                {{ getStateDescription(peer)}}\r\n            </span>\r\n\r\n            <span class=\"badge bg-light text-light-emphasis\" style=\"top: 0;\">{{  peer.uuid }}</span> \r\n            <!-- <br> <small class=\"small\">{{  peer.stateName }}</small> -->\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport PeerPing from './PeerPing.vue';\r\n\r\n    export default {\r\n        name: \"PeerList\",\r\n        components: {\r\n            PeerPing\r\n        },\r\n        data(){\r\n            return {\r\n                active: null\r\n            }\r\n        },\r\n        props: {\r\n            list: {\r\n                type: Array,\r\n                required: true,\r\n            },\r\n            highlight: {\r\n                required: false\r\n            }\r\n        },\r\n        methods: {\r\n            getStateTheme(peer){\r\n                switch(peer.stateName){\r\n                    case \"WAIT_CONNECT\":\r\n                        return \"warning\";\r\n\r\n                    case \"WAIT_REANSWER\":\r\n                        return \"danger\";\r\n\r\n                    case \"CONNECTED\":\r\n                        return \"success\";\r\n\r\n                    default:\r\n                        return \"outline-secondary\";\r\n                }\r\n            },\r\n            getStateDescription(peer){\r\n                const p = \"Waiting for \";\r\n\r\n                switch(peer.stateName){\r\n                    case \"WAIT_CONNECT\":\r\n                        return p + \"connection\";\r\n\r\n                    case \"WAIT_OFFER\":\r\n                        return p + \"an offer\";\r\n\r\n                    case \"WAIT_ANSWER\":\r\n                    case \"WAIT_REANSWER\":\r\n                        return p + \"an answer\";\r\n\r\n                    case \"CONNECTED\":\r\n                        return \"\";\r\n\r\n                    default:\r\n                        return \"something\";\r\n                }\r\n            },\r\n            showPeer(peer){\r\n                this.active = peer;\r\n                this.$emit(\"showPeer\", peer);\r\n            }\r\n        },\r\n        emits: ['showPeer']\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.peer {\r\n\r\n}\r\n</style>","<template>\r\n    <span>\r\n        {{ ping }}ms\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"PeerPing\",\r\n        data(){\r\n            return {\r\n                ping: 0,\r\n                i: null,\r\n            }\r\n        },\r\n        props: {\r\n            peer: {\r\n                required: true\r\n            }\r\n        },\r\n        inject: ['network'],\r\n        mounted(){\r\n            if(!this.network?.pinging) return;\r\n            this.i = setInterval(() => {\r\n                this.ping = this.peer.pingms;\r\n            }, this.network.ping_interval)\r\n\r\n        },\r\n        unmounted(){\r\n            clearInterval(this.i);\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./PeerPing.vue?vue&type=template&id=6a8f9e2a\"\nimport script from \"./PeerPing.vue?vue&type=script&lang=js\"\nexport * from \"./PeerPing.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PeerList.vue?vue&type=template&id=76e21178&scoped=true\"\nimport script from \"./PeerList.vue?vue&type=script&lang=js\"\nexport * from \"./PeerList.vue?vue&type=script&lang=js\"\n\nimport \"./PeerList.vue?vue&type=style&index=0&id=76e21178&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-76e21178\"]])\n\nexport default __exports__","// Used for emit/listen events between different parts of the whole app\r\n\r\nexport default class Event{\r\n\r\n    constructor(){\r\n        /**\r\n         * @private\r\n         */\r\n        this.e = {};\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @param {String} event \r\n     * @returns {Boolean}\r\n     */\r\n    has(event){\r\n        return this.e[event] !== undefined;\r\n    }\r\n\r\n    on(event, cb){\r\n        this.e[event] = this.e[event] || [];\r\n        this.e[event].push(cb);\r\n    }\r\n\r\n    off(event, cb){\r\n        if(!this.has(event)) return;\r\n        const i  = this.e[event].findIndex(ev => ev === cb);\r\n        if(i === -1) return;\r\n        this.e[event].splice(i, 1);\r\n    }\r\n\r\n    emit(event, ...args){\r\n        if(!this.has(event)) return;\r\n        this.e[event].forEach(ev => ev(...args));\r\n    }\r\n}","<template>\r\n    <div class=\"p-3\">\r\n\r\n        <div class=\"h4 d-flex justify-content-between\" v-if=\"isPeerAvailable\">\r\n            <span>{{ peer.isHost ? 'Initiator' : 'Joiner' }}</span>\r\n\r\n            <span>\r\n                <span class=\"badge bg-secondary\">{{ peer.uuid }}</span>\r\n                <span v-if=\"peer.connected\"> 🔛 <span class=\"badge bg-secondary\">{{ peer.partner }}</span></span>\r\n            </span>\r\n\r\n        </div>\r\n        <div v-if=\"peer.connected\" >\r\n\r\n            <div class=\"flex-fill\">\r\n                <h4>Ping History</h4>\r\n                <Line :data=\"pingChartData\" :options=\"chartOptions\" />\r\n            </div>\r\n            \r\n            <div class=\"d-flex justify-content-end mt-2\">\r\n                <button class=\"btn btn-danger px-3\">Disconnect</button>\r\n            </div>\r\n\r\n        </div>\r\n        <div v-else>\r\n        \r\n            <div>\r\n                <small>Signal Data</small>\r\n                <CopyReadonly v-if=\"isPeerAvailable\" :text=\"peer.signalData\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CopyReadonly from './CopyReadonly.vue';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js'\r\nimport { Line } from 'vue-chartjs'\r\n\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);\r\n\r\n    export default {\r\n        name: \"PeerView\",\r\n        data(){\r\n            return {\r\n                /**\r\n                 * {\r\n                 *  time: (Number | String) (get from Date.now() when updating ping)\r\n                 *  \r\n                 * }\r\n                 */\r\n                pingHistory: [{\r\n                    time: 0,\r\n                    value: 0\r\n                }],\r\n                chartOptions: {\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        x: {\r\n                            \r\n                            // display: false,\r\n                            ticks: {\r\n                                // eslint-disable-next-line no-unused-vars\r\n                                callback: (v, i, arr) => {\r\n                                    const length = arr.length,\r\n                                          gap = this.network.ping_interval,\r\n                                          diff = (length - i) - 1,\r\n                                          elapsed = gap * diff;\r\n\r\n                                    return `${elapsed / 1000}s ago`;\r\n                                }\r\n                            }\r\n                        },\r\n                        y: {\r\n                                ticks: {\r\n                                    callback: function(label) {\r\n                                        return label + ' ms';\r\n                                    },\r\n                                    stepSize: 1\r\n                                },\r\n                                scaleLabel: {\r\n                                    display: true,\r\n                                    labelString: '1s = 1000ms'\r\n                                }\r\n                            }\r\n                    },\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    datasets: {\r\n                        line: {\r\n                            tension: 0.2\r\n                        }\r\n                    }\r\n                },\r\n                pingWatchInterval: 0\r\n            }\r\n        },\r\n        components: {\r\n            CopyReadonly,\r\n            Line\r\n        },\r\n        props: {\r\n            peer: {\r\n                required: false\r\n            }\r\n        },\r\n        computed: {\r\n            isPeerAvailable(){\r\n                return this.peer !== undefined || this.peer !== null;\r\n            },\r\n            pingChartData(){\r\n                return {\r\n                    labels: this.pingHistory.map(p => p.time),\r\n                    datasets: [ {data: this.pingHistory.map(p => p.value) }]\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            peer: {\r\n                handler(){\r\n                    this.$forceUpdate();\r\n                    this.$refs.signaller?.reset();\r\n                    if(!this.peer.connected) this.pingHistory = [];\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!this.peer.connected) return;\r\n\r\n            this.pingWatchInterval = setInterval(() => {\r\n                this.pingHistory.push({\r\n                    time: Date.now(),\r\n                    value: this.peer.pingms\r\n                })\r\n            }, this.network.ping_interval)\r\n            \r\n        },\r\n        unmounted(){\r\n            clearInterval(this.pingWatchInterval);\r\n            this.pingHistory = [];\r\n        },\r\n        inject: ['network']\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\ntextarea {\r\n    font-size: 12px;\r\n    min-height: 200px;\r\n}\r\n</style>","<template>\r\n    <div class=\"input-group\">\r\n        <input type=\"text\" :value=\"text\" readonly class=\"form-control form-control-sm\" style=\"cursor: pointer;\" @click=\"copy\">\r\n        <button class=\"input-group-text\" ref=\"button\" @click=\"copy\">Copy</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"CopyReadonly\",\r\n        props: {\r\n            text: {\r\n                required: true\r\n            }\r\n        },\r\n        computed: {\r\n            btn(){\r\n                return this.$refs.button;\r\n            }\r\n        },\r\n        methods: {\r\n            copy(){\r\n                if(this.text === \"\" || this.text === null || this.text === undefined) return;\r\n                this.btn.innerText = \"✅ Copied\";\r\n                this.btn.classList.add(\"text-success\");\r\n                navigator.clipboard.writeText(this.text);\r\n            },\r\n            reset(){\r\n                this.btn.classList.remove(\"text-success\");\r\n                this.btn.innerText = \"Copy\";\r\n            }\r\n        },\r\n        updated(){  \r\n            this.reset();\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./CopyReadonly.vue?vue&type=template&id=87890642\"\nimport script from \"./CopyReadonly.vue?vue&type=script&lang=js\"\nexport * from \"./CopyReadonly.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PeerView.vue?vue&type=template&id=88b560e0&scoped=true\"\nimport script from \"./PeerView.vue?vue&type=script&lang=js\"\nexport * from \"./PeerView.vue?vue&type=script&lang=js\"\n\nimport \"./PeerView.vue?vue&type=style&index=0&id=88b560e0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-88b560e0\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n\r\n        <label for=\"inp-answer\" class=\"form-label\"><small>{{ initiator ? 'Confirm' : 'Answer' }} Here: </small></label>\r\n        <textarea id=\"inp-answer\" class=\"form-control\" v-model=\"response\" @click=\"response = ''\"></textarea>\r\n        <div class=\"form-text\" ref=\"notification\"></div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport PeerSignal from '@/peer-network/PeerSignal';\r\n\r\n    export default {\r\n        name: \"PeerSignaller\",\r\n        data(){\r\n            return {\r\n                response: null\r\n            }\r\n        },\r\n        props: {\r\n            initiator: {\r\n                type: Boolean,\r\n                require: false,\r\n                default: false\r\n            }\r\n        },\r\n        computed: {\r\n            notif(){\r\n                return this.$refs.notification\r\n            }\r\n        },\r\n        methods: {\r\n            reset(){\r\n                this.notif.innerHTML = \"\";\r\n            }\r\n        },\r\n        watch: {\r\n            response(value){\r\n                if(value === \"\") return;\r\n                // validate the input if it was a valid answer\r\n                const validity = PeerSignal.validate(value),\r\n                    types = [\"answer\", \"offer\"],\r\n                    [opposite, required] = this.initiator ? types.reverse() : types;\r\n\r\n                if(validity.value && validity.type === required){\r\n                    this.notif.innerHTML = \"\";\r\n\r\n                    // Invoke Network Method\r\n                    const peer = this.network.signal(validity.parsed);\r\n\r\n                    // Auto highlight the lone joiner peer\r\n                    if(!this.initiator) this.$emit(\"showPeer\", peer);\r\n\r\n\r\n\r\n                }else if(validity.value){\r\n                    this.notif.innerHTML = `The text that was pasted is a valid <strong>${opposite} signal</strong> but not the required <strong> ${required} signal </strong>`;\r\n                    this.response = \"\";\r\n                }else{\r\n                    this.notif.innerHTML = `Please paste a valid <strong> ${required} signal </strong>.`;\r\n                    this.response = \"\";\r\n                }\r\n            }\r\n        },\r\n        inject: ['network'],\r\n        emits: [\"showPeer\"]\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n","import { render } from \"./PeerSignaller.vue?vue&type=template&id=3d41a53f\"\nimport script from \"./PeerSignaller.vue?vue&type=script&lang=js\"\nexport * from \"./PeerSignaller.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"d-flex flex-column gap-2\">\r\n        <div class=\"flex-fill\">\r\n            \r\n        </div>\r\n        <div class=\"form-control\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"ChatModal\",\r\n        data(){\r\n            return {\r\n                /**\r\n                 * {\r\n                 *      message: String\r\n                 *      sender: String\r\n                 *      messageID: String\r\n                 * }\r\n                 */\r\n                data: [\r\n                    {\r\n                        message: \"hey yo\",\r\n                        sender: \"test\"\r\n                    },\r\n                    {\r\n                        message: \"yo whats up\",\r\n                        sender: \"own\",\r\n                    },\r\n                    {\r\n                        message: \"nah just checkin\",\r\n                        sender: \"test\"\r\n                    }\r\n                ],\r\n                /**\r\n                 *  Contains message IDs that are generated using the add chat. These pendings will be displayed as if it is not yet sent.\r\n                 *  Only when verifyChat with the corresponding messageID will this be verified\r\n                 */\r\n                pending: [],\r\n                input: \"\"\r\n            }\r\n        },\r\n        props: {\r\n            initialData: {\r\n                type: Array,\r\n                default: () => []\r\n            },\r\n            ownId: {\r\n                type: String,\r\n                require: true\r\n            },\r\n            verifySend: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            addChat(message, sender, messageID = null){\r\n                this.data.push({sender, message, messageID});\r\n            },\r\n            sendChat(){\r\n                const gen = this.generateID();\r\n                this.addChat(this.input, this.ownId, gen);\r\n                if(this.verifySend) this.pending.push(gen);\r\n            },\r\n            isPending(chat){\r\n                return this.pending.some(p => chat.messageID === p);\r\n            },\r\n            generateID(){\r\n                return Math.random().toString(36).slice(2, 10);\r\n            },\r\n            verify(messageID){\r\n                const index = this.pending.findIndex(id => messageID === id);\r\n                if(index === -1) return;\r\n                this.pending.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./ChatComponent.vue?vue&type=template&id=7a6f248e\"\nimport script from \"./ChatComponent.vue?vue&type=script&lang=js\"\nexport * from \"./ChatComponent.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <teleport to=\"#modal-cont\">\r\n        <div v-if=\"open\">\r\n            <div id=\"modal-backdrop\" @click=\"this.$emit('backdrop')\">\r\n\r\n            </div>\r\n            <component :is=\"modal\" :=\"$attrs\" > </component>\r\n        </div>\r\n    </teleport>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        name: \"ModalManager\",\r\n        props: {\r\n            open: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            modal: {\r\n                require: false\r\n            }\r\n        },\r\n        emits: ['backdrop'],\r\n        inheritAttrs: false\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./ModalManager.vue?vue&type=template&id=3fcb99bb\"\nimport script from \"./ModalManager.vue?vue&type=script&lang=js\"\nexport * from \"./ModalManager.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=742a4501&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=742a4501&lang=scss&scoped=true\"\nimport \"./App.vue?vue&type=style&index=1&id=742a4501&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-742a4501\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap\";\n\ncreateApp(App).mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpeer_network_prototype\"] = self[\"webpackChunkpeer_network_prototype\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6136); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","name","value","$options","host","$event","_hoisted_5","checked","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createVNode","_component_PeerList","onShowPeer","showPeerOptions","list","pending","highlight","$data","activePeer","onClick","_cache","args","createOffer","_hoisted_11","_hoisted_12","_createBlock","_component_PeerView","peer","ref","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_component_CopyReadonly","text","network","availableInitiator","signalData","_component_PeerSignaller","initiator","_hoisted_17","active","_component_ModalManager","open","modalOpen","modal","PeerSignal","constructor","simpleSignal","sender","joiner","_defineProperty","this","sdp","toString","stringify","static","signal","parse","err","every","v","Object","hasOwn","parsed","peeruuid","len","Math","random","slice","Utf8ArrayToStr","array","out","i","c","char2","char3","length","String","fromCharCode","invokeIfAvailable","cb","Peer","state","_state","stateName","entries","State","find","n","s","connected","CONNECTED","appropriate","some","toUpperCase","handle","reofferFrom","INIT_PEER","partner","init","isHost","p","SimplePeer","trickle","channelName","uuid","config","iceServers","urls","WAIT_OFFER","on","data","WAIT_CONNECT","signalParam","push","unshift","WAIT_ANSWER","WAIT_REANSWER","setup","ArrayBuffer","isView","send","pingArrive","DISCONNECTED","CANCELLED","pinging","ping","pingInterval","setInterval","ping_interval","pingStart","Date","now","pingms","console","error","d","log","write","equals","destroy","clearInterval","Symbol","PeerArray","Array","get","index","findIndex","has","size","add","remove","splice","isEmpty","clean","forEach","PeerNetworkConfig","PeerNetwork","opts","super","assign","restart","initialized","processing","offer","answer","offerSignal","confirm","answerSignal","event","charAt","_events","set","_event_names","hasAvailableInitiators","callbackInfo","handler","save_history","history","_onOffer","_onConfirm","_onAnswer","_onConnect","_onReoffer","_onCancel","_onDisconnect","processed","ev","shift","style","_Fragment","_renderList","$props","key","_normalizeClass","getStateTheme","showPeer","_component_PeerPing","_toDisplayString","getStateDescription","props","required","inject","mounted","unmounted","__exports__","components","PeerPing","methods","$emit","emits","Event","e","undefined","off","emit","isPeerAvailable","_component_Line","pingChartData","options","chartOptions","readonly","copy","computed","btn","$refs","button","innerText","classList","navigator","clipboard","writeText","reset","updated","ChartJS","register","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","PointElement","pingHistory","time","responsive","plugins","legend","display","scales","x","ticks","callback","arr","gap","diff","elapsed","y","label","stepSize","scaleLabel","labelString","animation","duration","datasets","line","tension","pingWatchInterval","CopyReadonly","Line","labels","map","watch","$forceUpdate","signaller","deep","response","Boolean","require","default","notif","notification","innerHTML","validity","validate","types","opposite","reverse","message","input","initialData","ownId","verifySend","addChat","messageID","sendChat","gen","generateID","isPending","chat","verify","_Teleport","to","_resolveDynamicComponent","_normalizeProps","_guardReactiveProps","_ctx","$attrs","inheritAttrs","bus","EventBus","window","PeerList","PeerView","PeerSignaller","ModalManager","ChatComponent","created","old","provide","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","r","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}